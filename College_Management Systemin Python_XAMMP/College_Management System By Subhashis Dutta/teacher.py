from tkinter import *
import mysql.connector
from tkinter import ttk
from tkinter import ttk,messagebox
from PIL import ImageTk

def add():
    if name1.get()=="" or dpt1.get()=="" or hid1.get()=="" or department1.get()=="" or em1.get()=="" or mob1.get()=="" or courselist.get()=="" or sub1.get()=="" or ql1.get()=="" :
       messagebox.showerror("Error","All fields are required")
    else:
     nam=name1.get()
     dp1=dpt1.get()
     hid=hid1.get()
     dep=department1.get()
     email=em1.get()
     mob=mob1.get()
     course1=courselist.get()
     sb=sub1.get()
     ql=ql1.get()
     db=mysql.connector.connect(host="localhost",user="root",password="",database="sd")
     mycursor=db.cursor()
     try:
        sql="insert into teacherinfo(name,deptno,hiredate,department,email,mob,course,sub,qualification)values(%s,%s,%s,%s,%s,%s,%s,%s,%s)"
        val=(nam,dp1,hid,dep,email,mob,course1,sb,ql)
        mycursor.execute(sql,val)
        db.commit()
        messagebox.showinfo("information","Record Inserted successfully")
        fectdata()
        cleardata()
     except EXCEPTION as e:
        print(e)
        db.rollback()
        db.close()
def fectdata():
    nam = name1.get()
    dp1 = dpt1.get()
    hid = hid1.get()
    dep = department1.get()
    email = em1.get()
    mob = mob1.get()
    course1 = courselist.get()
    sb = sub1.get()
    ql = ql1.get()
    db=mysql.connector.connect(host="localhost", user="root", password="", database="sd")
    mycursor = db.cursor()
    mycursor.execute("select * from teacherinfo")
    rows=mycursor.fetchall()
    if len(rows)!=0:
        studtab.delete(*studtab.get_children())
    for row in rows:
       studtab.insert('',END,values=row)
    db.commit()
    db.close()
def cleardata():
    name1.delete(0, 'end')
    dpt1.delete(0, 'end')
    hid1.delete(0, 'end')
    department1.delete(0, 'end')
    em1.delete(0, 'end')
    mob1.delete(0, 'end')
    courselist.delete(0, 'end')
    sub1.delete(0, 'end')
    ql1.delete(0 ,'end')
    name1.focus_set()
def getdata(event):
    currow=studtab.focus()
    contents=studtab.item(currow)
    row=contents['values']
    name1.delete(0, END)
    dpt1.delete(0, END)
    hid1.delete(0, END)
    department1.delete(0, END)
    em1.delete(0, END)
    mob1.delete(0, END)
    courselist.delete(0, END)
    sub1.delete(0, END)
    ql1.delete(0, END)
    name1.insert(0,row[0])
    dpt1.insert(0,row[1])
    hid1.insert(0, row[2])
    department1.insert(0, row[3])
    em1.insert(0,row[4])
    mob1.insert(0, row[5])
    courselist.insert(0,row[6])
    sub1.insert(0, row[7])
    ql1.insert(0,row[8])
def update():
    nam = name1.get()
    dp1 = dpt1.get()
    hid = hid1.get()
    dep = department1.get()
    email = em1.get()
    mob = mob1.get()
    course1 = courselist.get()
    sb = sub1.get()
    ql = ql1.get()
    db = mysql.connector.connect(host="localhost", user="root", password="", database="sd")
    mycursor = db.cursor()
    try:
        sql = "update teacherinfo set deptno=%s,hiredate=%s,department=%s,email=%s,mob=%s,course=%s,sub=%s,qualification=%s where name=%s"
        val = (dp1,hid,dep,email,mob,course1,sb,ql,nam)
        mycursor.execute(sql, val)
        db.commit()
        messagebox.showinfo("information", "Record Updated successfully")
        name1.delete(0, END)
        dpt1.delete(0, END)
        hid1.delete(0, END)
        department1.delete(0, END)
        em1.delete(0, END)
        mob1.delete(0, END)
        courselist.delete(0, END)
        sub1.delete(0, END)
        ql1.delete(0, END)
        fectdata()
        cleardata()
    except EXCEPTION as e:
        print(e)
        db.rollback()
        db.close()
def delete1():
    nam = name1.get()
    db = mysql.connector.connect(host="localhost", user="root", password="", database="sd")
    mycursor = db.cursor()
    try:
        sql = "delete from teacherinfo where name=%s"
        val = (nam,)
        mycursor.execute(sql, val)
        db.commit()
        messagebox.showinfo("information", "Record Deleted successfully")
        name1.delete(0, END)
        dpt1.delete(0, END)
        hid1.delete(0, END)
        department1.delete(0, END)
        em1.delete(0, END)
        mob1.delete(0, END)
        courselist.delete(0, END)
        sub1.delete(0, END)
        ql1.delete(0, END)
        fectdata()
        cleardata()
    except EXCEPTION as e:
        print(e)
        db.rollback()
        db.close()

def back():
	rt.destroy()
	import admimain

def fectdata1():
    ser1=comboser.get()
    lsearch1 = lsearch.get()
    db = mysql.connector.connect(host="localhost", user="root", password="", database="sd")
    mycursor = db.cursor()
    mycursor.execute("select * from teacherinfo where "+str(ser1)+" LIKE '%"+str(lsearch1)+"%'")
    rows=mycursor.fetchall()
    if len(rows)!=0:
        studtab.delete(*studtab.get_children())
    for row in rows:
       studtab.insert('',END,values=row)
    db.commit()
    db.close()
rt=Tk()
rt.title("Professors Details ")
rt.geometry("1400x900+0+0")
bg=ImageTk.PhotoImage(file="pic.jpg")
bglb=Label(rt,image=bg)
bglb.place(x=0,y=0,relwidth=1,relheight=1)
title=Label(rt,text="Professors Details",bd=5,relief=GROOVE,font=("constantia",30,"bold"),bg="yellow",fg="black")
title.pack(side=TOP,fill=X)
managefrm=Frame(rt,bd=4,relief=RIDGE,bg="white")
managefrm.place(x=20,y=100,width=520,height=650)
mtitle=Label(managefrm,text="Professors List",font=("times new roman",20,"bold"),fg="black",bg="white")
mtitle.grid(row=0,columnspan=2,pady=20)
name=Label(managefrm,text="Name",font=("times new roman",15,"bold"),fg="black",bg="white")
name.grid(row=1,column=0,pady=10,padx=50,sticky="w")
name1=Entry(managefrm,font=("times new roman",15,"bold"),fg="black",bg="white")
name1.grid(row=1,column=1,pady=10,padx=20,sticky="w")
dpt=Label(managefrm,text="Department Id",font=("times new roman",15,"bold"),fg="black",bg="white")
dpt.grid(row=2,column=0,pady=10,padx=50,sticky="w")
dpt1=Entry(managefrm,font=("times new roman",15,"bold"),fg="black",bg="white")
dpt1.grid(row=2,column=1,pady=10,padx=20,sticky="w")
hid=Label(managefrm,text="Hire Date",font=("times new roman",15,"bold"),fg="black",bg="white")
hid.grid(row=3,column=0,pady=10,padx=50,sticky="w")
hid1=Entry(managefrm,font=("times new roman",15,"bold"),fg="black",bg="white")
hid1.grid(row=3,column=1,pady=10,padx=20,sticky="w")
department=Label(managefrm,text="Department",font=("times new roman",15,"bold"),fg="black",bg="white")
department.grid(row=4,column=0,pady=10,padx=50,sticky="w")
department1=Entry(managefrm,font=("times new roman",15,"bold"),fg="black",bg="white")
department1.grid(row=4,column=1,pady=10,padx=20,sticky="w")
em=Label(managefrm,text="Email",font=("times new roman",15,"bold"),fg="black",bg="white")
em.grid(row=5,column=0,pady=10,padx=50,sticky="w")
em1=Entry(managefrm,font=("times new roman",15,"bold"),fg="black",bg="white")
em1.grid(row=5,column=1,pady=10,padx=20,sticky="w")
mob=Label(managefrm,text="Mobile no.",font=("times new roman",15,"bold"),fg="black",bg="white")
mob.grid(row=6,column=0,pady=10,padx=50,sticky="w")
mob1=Entry(managefrm,font=("times new roman",15,"bold"),fg="black",bg="white")
mob1.grid(row=6,column=1,pady=10,padx=20,sticky="w")
course=Label(managefrm,text="Course",font=("times new roman",15,"bold"),fg="black",bg="white")
course.grid(row=7,column=0,pady=10,padx=50,sticky="w")
courselist=Entry(managefrm,font=("times new roman",15,"bold"),fg="black",bg="white")
courselist.grid(row=7,column=1,pady=10,padx=20,sticky="w")
sub=Label(managefrm,text="Subject",font=("times new roman",15,"bold"),fg="black",bg="white")
sub.grid(row=8,column=0,pady=10,padx=50,sticky="w")
sub1=Entry(managefrm,font=("times new roman",15,"bold"),fg="black",bg="white")
sub1.grid(row=8,column=1,pady=10,padx=20,sticky="w")
ql=Label(managefrm,text="Qualification",font=("times new roman",15,"bold"),fg="black",bg="white")
ql.grid(row=9,column=0,pady=10,padx=50,sticky="w")
ql1=Entry(managefrm,font=("times new roman",15,"bold"),fg="black",bg="white")
ql1.grid(row=9,column=1,pady=10,padx=20,sticky="w")
btnfrm=Frame(managefrm,bd=4,relief=RIDGE,bg="gray")
btnfrm.place(x=10,y=530,width=400,height=100)


addbt=Button(btnfrm,text="ADD",command=add,width=10).grid(row=0,column=0,padx=10,pady=10)
updatebt=Button(btnfrm,text="UPDATE",command=update,width=10).grid(row=0,column=1,padx=10,pady=10)
detebt=Button(btnfrm,text="DELETE",command=delete1,width=10).grid(row=0,column=2,padx=10,pady=10)
clrt=Button(btnfrm,text="CLEAR",command=cleardata,width=10).grid(row=0,column=3,padx=10,pady=10)
backbt=Button(btnfrm,text="BACK",command=back,width=10).grid(row=7,column=0,padx=10,pady=10)
detfrm=Frame(rt,bd=4,relief=RIDGE,bg="yellow")
detfrm.place(x=500,y=100,width=850,height=650)
lsearch=Label(detfrm,text="Search By",font=("times new roman",15,"bold"),bg="yellow")
lsearch.grid(row=0,column=0,padx=10,pady=20,sticky="w")
comboser=ttk.Combobox(detfrm,font=("times new roman",15,"bold"),width=10,state='readonly')
comboser['values']=("name","roll")
comboser.grid(row=0,column=1,padx=20,pady=10,sticky="w")
lsearch=Entry(detfrm,font=("Times New Roman",15,"bold"),bd=5,relief=GROOVE)
lsearch.grid(row=0,column=2,pady=10,padx=20,sticky="w")
serbt=Button(detfrm,text="Search",command=fectdata1,font=("Times New Roman",10,"bold"),width=10,pady=5).grid(row=0,column=3,padx=10,pady=10)
showbt=Button(detfrm,text="Show All",command=fectdata,font=("Times New Roman",10,"bold"),width=10,pady=5).grid(row=0,column=4,padx=10,pady=10)
tabfrm=Frame(detfrm,bd=4,relief=RIDGE,bg="lightblue")
tabfrm.place(x=10,y=70,width=800,height=450)
scrollx=Scrollbar(tabfrm,orient=HORIZONTAL)
scrolly=Scrollbar(tabfrm,orient=VERTICAL)
studtab=ttk.Treeview(tabfrm,columns=("name","deptno","hiredate","department","email","mobileno","course","subject","qualification"),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
scrollx.pack(side=BOTTOM,fill=X)
scrolly.pack(side=RIGHT,fill=Y)
scrollx.config(command=studtab.xview)
scrolly.config(command=studtab.yview)
studtab.heading("name",text="Name")
studtab.heading("deptno",text="Department Id")
studtab.heading("hiredate",text="Hire Date")
studtab.heading("department",text="Department")
studtab.heading("email",text="Email")
studtab.heading("mobileno",text="Mobile no.")
studtab.heading("course",text="Course")
studtab.heading("subject",text="Subject")
studtab.heading("qualification",text="Qualification")
studtab['show']="headings"
studtab.column("name",width=100)
studtab.column("deptno",width=100)
studtab.column("hiredate",width=100)
studtab.column("department",width=100)
studtab.column("email",width=100)
studtab.column("mobileno",width=100)
studtab.column("course",width=100)
studtab.column("subject",width=100)
studtab.column("qualification",width=100)
studtab.pack(fill=BOTH,expand=1)
studtab.bind("<ButtonRelease-1>",getdata)

fectdata()
rt.mainloop()