from tkinter import *
import mysql.connector
from tkinter import ttk
from tkinter import ttk,messagebox
from PIL import ImageTk

def add():
    if name1.get()=="" or rol1.get()=="" or cs1.get()=="" or sgp1.get()=="" or fd1.get()=="" or courselist.get()=="" :
       messagebox.showerror("Error","All fields are required")
    else:
     nam=name1.get()
     r1=rol1.get()
     sem=cs1.get()
     sg=sgp1.get()
     course1=courselist.get()
     dep=department1.get()
     fees=fd1.get()
     db=mysql.connector.connect(host="localhost",user="root",password="",database="sd")
     mycursor=db.cursor()
     try:
        sql="insert into details(name,rol,cs,sgp,course,department,fd)values(%s,%s,%s,%s,%s,%s,%s)"
        val=(nam,r1,sem,sg,course1,dep,fees)
        mycursor.execute(sql,val)
        db.commit()
        messagebox.showinfo("information","Record Inserted successfully")
        fectdata()
        cleardata()
     except EXCEPTION as e:
        print(e)
        db.rollback()
        db.close()
def fectdata():
    nam=name1.get()
    r1=rol1.get()
    sem=cs1.get()
    sg=sgp1.get()
    course1=courselist.get()
    dep=department1.get()
    fees=fd1.get()
    db = mysql.connector.connect(host="localhost", user="root", password="", database="sd")
    mycursor = db.cursor()
    mycursor.execute("select * from details")
    rows=mycursor.fetchall()
    if len(rows)!=0:
        studtab.delete(*studtab.get_children())
    for row in rows:
       studtab.insert('',END,values=row)
    db.commit()
    db.close()
def cleardata():
    name1.delete(0, 'end')
    rol1.delete(0, 'end')
    cs1.delete(0, 'end')
    sgp1.delete(0, 'end')
    courselist.delete(0, 'end')
    department1.delete(0, 'end')
    fd1.delete(0 ,'end')
    name1.focus_set()
def getdata(event):
    currow=studtab.focus()
    contents=studtab.item(currow)
    row=contents['values']
    name1.delete(0, END)
    rol1.delete(0, END)
    cs1.delete(0, END)
    sgp1.delete(0, END)
    courselist.delete(0, END)
    department1.delete(0, END)
    fd1.delete(0, END)
    name1.insert(0,row[0])
    rol1.insert(0,row[1])
    cs1.insert(0,row[2])
    sgp1.insert(0,row[3])
    courselist.insert(0,row[4])
    department1.insert(0,row[5])
    fd1.insert(0,row[6])
def update():
    nam=name1.get()
    r1=rol1.get()
    sem=cs1.get()
    sg=sgp1.get()
    course1=courselist.get()
    dep=department1.get()
    fees=fd1.get()
    db = mysql.connector.connect(host="localhost", user="root", password="", database="sd")
    mycursor = db.cursor()
    try:
        sql = "update details set rol=%s,cs=%s,sgp=%s,course=%s,department=%s,fd=%s where name=%s"
        val = (r1,sem,sg,course1,dep,fees,nam)
        mycursor.execute(sql, val)
        db.commit()
        messagebox.showinfo("information", "Record Updated successfully")
        name1.delete(0, END)
        rol1.delete(0, END)
        cs1.delete(0, END)
        sgp1.delete(0, END)
        courselist.delete(0, END)
        department1.delete(0, END)
        fd1.delete(0, END)
        fectdata()
        cleardata()
    except EXCEPTION as e:
        print(e)
        db.rollback()
        db.close()
def delete1():
    nam = name1.get()
    db = mysql.connector.connect(host="localhost", user="root", password="", database="sd")
    mycursor = db.cursor()
    try:
        sql = "delete from details where name=%s"
        val = (nam,)
        mycursor.execute(sql, val)
        db.commit()
        messagebox.showinfo("information", "Record Deleted successfully")
        name1.delete(0, END)
        rol1.delete(0, END)
        cs1.delete(0, END)
        sgp1.delete(0, END)
        courselist.delete(0, END)
        department1.delete(0, END)
        fd1.delete(0, END)
        fectdata()
        cleardata()
    except EXCEPTION as e:
        print(e)
        db.rollback()
        db.close()

def back():
	rt.destroy()
	import studmain

def fectdata1():
    ser1=comboser.get()
    lsearch1 = lsearch.get()
    db = mysql.connector.connect(host="localhost", user="root", password="", database="sd")
    mycursor = db.cursor()
    mycursor.execute("select * from details where "+str(ser1)+" LIKE '%"+str(lsearch1)+"%'")
    rows=mycursor.fetchall()
    if len(rows)!=0:
        studtab.delete(*studtab.get_children())
    for row in rows:
       studtab.insert('',END,values=row)
    db.commit()
    db.close()
rt=Tk()
rt.title("Student View Fees Details")
rt.geometry("1400x900+0+0")
bg=ImageTk.PhotoImage(file="pic.jpg")
bglb=Label(rt,image=bg)
bglb.place(x=0,y=0,relwidth=1,relheight=1)
frame=Frame(rt,bg="white")
frame.place(x=900,y=200,width=350,height=350)
bg1=ImageTk.PhotoImage(file="c.jpg")
bglb2=Label(frame,image=bg1)
bglb2.place(x=0,y=0,width=350,height=350)
title=Label(rt,text="View Fees Details",bd=5,relief=GROOVE,font=("constantia",30,"bold"),bg="yellow",fg="black")
title.pack(side=TOP,fill=X)
managefrm=Frame(rt,bd=4,relief=RIDGE,bg="white")
managefrm.place(x=20,y=100,width=0,height=0)
mtitle=Label(managefrm,text="Students List",font=("times new roman",20,"bold"),fg="black",bg="white")
mtitle.grid(row=0,columnspan=2,pady=20)
name=Label(managefrm,text="Name",font=("times new roman",15,"bold"),fg="black",bg="white")
name.grid(row=1,column=0,pady=10,padx=50,sticky="w")
name1=Entry(managefrm,font=("times new roman",15,"bold"),fg="black",bg="white")
name1.grid(row=1,column=1,pady=10,padx=20,sticky="w")
rol=Label(managefrm,text="Roll",font=("times new roman",15,"bold"),fg="black",bg="white")
rol.grid(row=2,column=0,pady=10,padx=50,sticky="w")
rol1=Entry(managefrm,font=("times new roman",15,"bold"),fg="black",bg="white")
rol1.grid(row=2,column=1,pady=10,padx=20,sticky="w")
cs=Label(managefrm,text="Current Semester",font=("times new roman",15,"bold"),fg="black",bg="white")
cs.grid(row=3,column=0,pady=10,padx=50,sticky="w")
cs1=Entry(managefrm,font=("times new roman",15,"bold"),fg="black",bg="white")
cs1.grid(row=3,column=1,pady=10,padx=20,sticky="w")
sgp=Label(managefrm,text="SGPA Obtained",font=("times new roman",15,"bold"),fg="black",bg="white")
sgp.grid(row=4,column=0,pady=10,padx=50,sticky="w")
sgp1=Entry(managefrm,font=("times new roman",15,"bold"),fg="black",bg="white")
sgp1.grid(row=4,column=1,pady=10,padx=20,sticky="w")
course=Label(managefrm,text="Course",font=("times new roman",15,"bold"),fg="black",bg="white")
course.grid(row=5,column=0,pady=10,padx=50,sticky="w")
courselist=Entry(managefrm,font=("times new roman",15,"bold"),fg="black",bg="white")
courselist.grid(row=5,column=1,pady=10,padx=20,sticky="w")
department=Label(managefrm,text="Department",font=("times new roman",15,"bold"),fg="black",bg="white")
department.grid(row=6,column=0,pady=10,padx=50,sticky="w")
department1=Entry(managefrm,font=("times new roman",15,"bold"),fg="black",bg="white")
department1.grid(row=6,column=1,pady=10,padx=20,sticky="w")
fd=Label(managefrm,text="Fees Due",font=("times new roman",15,"bold"),fg="black",bg="white")
fd.grid(row=7,column=0,pady=10,padx=50,sticky="w")
fd1=Entry(managefrm,font=("times new roman",15,"bold"),fg="black",bg="white")
fd1.grid(row=7,column=1,pady=10,padx=20,sticky="w")

detfrm=Frame(rt,bd=4,relief=RIDGE,bg="yellow")
detfrm.place(x=20,y=100,width=850,height=650)
lsearch=Label(detfrm,text="Search By",font=("times new roman",15,"bold"),bg="yellow")
lsearch.grid(row=0,column=0,padx=10,pady=20,sticky="w")
comboser=ttk.Combobox(detfrm,font=("times new roman",15,"bold"),width=10,state='readonly')
comboser['values']=("name","roll")
comboser.grid(row=0,column=1,padx=20,pady=10,sticky="w")
lsearch=Entry(detfrm,font=("Times New Roman",15,"bold"),bd=5,relief=GROOVE)
lsearch.grid(row=0,column=2,pady=10,padx=20,sticky="w")
serbt=Button(detfrm,text="Search",command=fectdata1,font=("Times New Roman",10,"bold"),width=10,pady=5).grid(row=0,column=3,padx=10,pady=10)
showbt=Button(detfrm,text="Show All",command=fectdata,font=("Times New Roman",10,"bold"),width=10,pady=5).grid(row=0,column=4,padx=10,pady=10)
btnfrm=Frame(detfrm,bd=4,relief=RIDGE,bg="gray")
btnfrm.place(x=10,y=580,width=100,height=50)
backbt=Button(btnfrm,text="BACK",command=back,width=10).grid(row=0,column=0,padx=10,pady=10)
tabfrm=Frame(detfrm,bd=4,relief=RIDGE,bg="lightblue")
tabfrm.place(x=10,y=70,width=800,height=450)
scrollx=Scrollbar(tabfrm,orient=HORIZONTAL)
scrolly=Scrollbar(tabfrm,orient=VERTICAL)
studtab=ttk.Treeview(tabfrm,columns=("name","roll","currentsem","sgpa","course","department","duefees"),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
scrollx.pack(side=BOTTOM,fill=X)
scrolly.pack(side=RIGHT,fill=Y)
scrollx.config(command=studtab.xview)
scrolly.config(command=studtab.yview)
studtab.heading("name",text="Name")
studtab.heading("roll",text="Roll")
studtab.heading("currentsem",text="Current Sem")
studtab.heading("sgpa",text="SGPA")
studtab.heading("duefees",text="Due Fees")
studtab.heading("course",text="Course")
studtab.heading("department",text="Department")
studtab['show']="headings"
studtab.column("name",width=100)
studtab.column("roll",width=100)
studtab.column("currentsem",width=100)
studtab.column("sgpa",width=100)
studtab.column("course",width=100)
studtab.column("department",width=100)
studtab.column("duefees",width=100)
studtab.pack(fill=BOTH,expand=1)
studtab.bind("<ButtonRelease-1>",getdata)

fectdata()
rt.mainloop()